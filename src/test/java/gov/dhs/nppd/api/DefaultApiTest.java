/*
 * Human Review
 * And API for manipulating Thread Indicator documents in STIX format
 *
 * OpenAPI spec version: 1.0.0
 * Contact: deven.phillips@redhat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package gov.dhs.nppd.api;

import java.util.List;

import org.junit.Ignore;
import org.junit.Test;
import org.openapitools.client.ApiException;
import org.openapitools.client.api.DefaultApi;
import org.openapitools.client.model.APIOptionsResultList;
import org.openapitools.client.model.ActionList;
import org.openapitools.client.model.AuthCredentials;
import org.openapitools.client.model.ListOfHumanReviewItems;

/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    
    /**
     * Create a ActionList
     *
     * Creates a new instance of a &#x60;ActionList&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createActionListTest() throws ApiException {
        ActionList actionList = null;
        api.createActionList(actionList);

        // TODO: test validations
    }
    
    /**
     * Delete a ActionList
     *
     * Deletes an existing &#x60;ActionList&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteActionListTest() throws ApiException {
        String actionListId = null;
        api.deleteActionList(actionListId);

        // TODO: test validations
    }
    
    /**
     * Get a ActionList
     *
     * Gets the details of a single instance of a &#x60;ActionList&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getActionListTest() throws ApiException {
        String actionListId = null;
        ActionList response = api.getActionList(actionListId);

        // TODO: test validations
    }
    
    /**
     * List All ActionLists
     *
     * Gets a list of all &#x60;ActionList&#x60; entities.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getActionListsTest() throws ApiException {
        List<ActionList> response = api.getActionLists();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void humanreviewPendingGetTest() throws ApiException {
        ListOfHumanReviewItems response = api.humanreviewPendingGet();

        // TODO: test validations
    }
    
    /**
     * Return endpoint API documents
     *
     * When requested, this endpoint/verb combination returns documentation explainin how this API endpoint works
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void humanreviewPendingOptionsTest() throws ApiException {
        APIOptionsResultList response = api.humanreviewPendingOptions();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * update to support individual review
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void humanreviewStixIdFieldPutTest() throws ApiException {
        String stixId = null;
        String field = null;
        String originalValue = null;
        String acceptedValue = null;
        String fieldName = null;
        String actionType = null;
        api.humanreviewStixIdFieldPut(stixId, field, originalValue, acceptedValue, fieldName, actionType);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void humanreviewStixIdPutTest() throws ApiException {
        String stixId = null;
        api.humanreviewStixIdPut(stixId);

        // TODO: test validations
    }
    
    /**
     * Update a ActionList
     *
     * Updates an existing &#x60;ActionList&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateActionListTest() throws ApiException {
        String actionListId = null;
        ActionList actionList = null;
        api.updateActionList(actionListId, actionList);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userPutTest() throws ApiException {
        AuthCredentials authCredentials = null;
        String response = api.userPut(authCredentials);

        // TODO: test validations
    }
    
}
